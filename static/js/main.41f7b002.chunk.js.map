{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","registerServiceWorker.js","index.js"],"names":["Die","props","handleClick","bind","this","idx","numberWords","locked","val","disabled","rolling","classes","className","onClick","Component","defaultProps","Dice","dice","map","d","key","RuleRow","score","name","doScore","description","undefined","Rule","params","Object","assign","reduce","prev","curr","freqs","Map","set","get","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","includes","SmallStraight","Set","has","LargeStraight","size","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","totalScore","cellSpacing","evt","getTotalScore","Game","state","fill","rollsLeft","animateRoll","roll","toggleLocked","setState","setTimeout","st","i","Math","ceil","random","slice","rulename","ruleFn","every","x","displayRollInfo","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.41f7b002.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Die.css\";\n\nclass Die extends Component {\n    static defaultProps = {\n        numberWords: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"],\n        // default initial value for spinning trigger\n        // val: 6,\n    };\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    // handleClick running the handleClick passed by the props from Game.js>Dice.js\n    handleClick() {\n        this.props.handleClick(this.props.idx);\n    }\n\n    render() {\n        const { numberWords, locked, val, disabled, rolling } = this.props;\n        let classes = `Die fas fa-dice-${numberWords[val - 1]} fa-5x `;\n        if (locked) {\n            classes += \"Die-locked\";\n        }\n        if (rolling) {\n            classes += \"Die-rolling\";\n        }\n        return (\n            <i\n                className={classes}\n                onClick={this.handleClick}\n                disabled={disabled}\n            >\n                {/* {this.props.val} */}\n            </i>\n        );\n    }\n}\n\nexport default Die;\n","import React, { Component } from \"react\";\nimport Die from \"./Die\";\nimport \"./Dice.css\";\n\nclass Dice extends Component {\n    render() {\n        return (\n            <div className=\"Dice\">\n                {this.props.dice.map((d, idx) => (\n                    <Die\n                        handleClick={this.props.handleClick}\n                        val={d}\n                        locked={this.props.locked[idx]}\n                        idx={idx}\n                        key={idx}\n                        disabled={this.props.disabled}\n                        rolling={this.props.rolling && !this.props.locked[idx]}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Dice;\n","import React, { Component } from \"react\";\nimport \"./RuleRow.css\";\n\nclass RuleRow extends Component {\n    render() {\n        // shorten the handler assigning score, name, description and doScore directly to their this.hljs-preprocessor\n        // we can now reference directly to score, name, doScore, description without this.props\n        const { score, name, doScore, description } = this.props;\n        // check if the score exists, if it does disabled is true.\n        const disabled = score !== undefined;\n        return (\n            <tr\n                className={`RuleRow RuleRow-${\n                    disabled ? \"disabled\" : \"active\"\n                }`}\n                onClick={\n                    // prevents the reuse of a score row that has already been used\n                    disabled ? null : doScore\n                }\n            >\n                <td className=\"RuleRow-name\">{name}</td>\n                <td className=\"RuleRow-score\">\n                    {disabled ? score : description}\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default RuleRow;\n","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n    constructor(params) {\n        // put all properties in params on instance\n        Object.assign(this, params);\n    }\n\n    sum(dice) {\n        // sum of all dice\n        return dice.reduce((prev, curr) => prev + curr);\n    }\n\n    freq(dice) {\n        // frequencies of dice values\n        const freqs = new Map();\n        for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n        return Array.from(freqs.values());\n    }\n\n    count(dice, val) {\n        // # times val appears in dice\n        return dice.filter((d) => d === val).length;\n    }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n    evalRoll = (dice) => {\n        return this.val * this.count(dice, this.val);\n    };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n    evalRoll = (dice) => {\n        // do any of the counts meet of exceed this distro?\n        return this.freq(dice).some((c) => c >= this.count)\n            ? this.sum(dice)\n            : 0;\n    };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n\nclass FullHouse extends Rule {\n    evalRoll = (dice) => {\n        const freqs = this.freq(dice);\n        return freqs.includes(2) && freqs.includes(3) ? this.score : 0;\n    };\n}\n\n/** Check for small straights. */\n\nclass SmallStraight extends Rule {\n    evalRoll = (dice) => {\n        const d = new Set(dice);\n        if (d.has(2) && d.has(3) && d.has(4) && (d.has(1) || d.has(5))) {\n            return this.score;\n        }\n\n        if (d.has(3) && d.has(4) && d.has(5) && (d.has(2) || d.has(6))) {\n            return this.score;\n        }\n        return 0;\n    };\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n    evalRoll = (dice) => {\n        const d = new Set(dice);\n\n        // large straight must be 5 different dice & only one can be a 1 or a 6\n        return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n    };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n    evalRoll = (dice) => {\n        // all dice must be the same\n        return this.freq(dice)[0] === 5 ? this.score : 0;\n    };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1, description: \"1 points per 1\" });\nconst twos = new TotalOneNumber({ val: 2, description: \"2 points per 2\" });\nconst threes = new TotalOneNumber({ val: 3, description: \"3 points per 3\" });\nconst fours = new TotalOneNumber({ val: 4, description: \"4 points per 4\" });\nconst fives = new TotalOneNumber({ val: 5, description: \"5 points per 5\" });\nconst sixes = new TotalOneNumber({ val: 6, description: \"6 points per 6\" });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({\n    count: 3,\n    description: \"Sum all dice if 3 are the same\",\n});\nconst fourOfKind = new SumDistro({\n    count: 4,\n    description: \"Sum all dice if 4 are the same\",\n});\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({\n    score: 25,\n    description: \"25 points for a full house\",\n});\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({\n    score: 30,\n    description: \"30 points for a small straight\",\n});\nconst largeStraight = new LargeStraight({\n    score: 40,\n    description: \"40 points for a large straight\",\n});\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({\n    score: 50,\n    description: \"50 points for a yahtzee\",\n});\n\n// for chance, can view as some of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0, description: \"Sum of all dice\" });\n\nexport {\n    ones,\n    twos,\n    threes,\n    fours,\n    fives,\n    sixes,\n    threeOfKind,\n    fourOfKind,\n    fullHouse,\n    smallStraight,\n    largeStraight,\n    yahtzee,\n    chance,\n};\n","import React, { Component } from \"react\";\nimport RuleRow from \"./RuleRow\";\nimport \"./ScoreTable.css\";\nimport {\n    ones,\n    twos,\n    threes,\n    fours,\n    fives,\n    sixes,\n    threeOfKind,\n    fourOfKind,\n    fullHouse,\n    smallStraight,\n    largeStraight,\n    yahtzee,\n    chance,\n} from \"./Rules\";\n\nclass ScoreTable extends Component {\n    getTotalScore() {\n        const { scores } = this.props;\n        let totalScore = 0;\n        for (const key in scores) {\n            if (scores[key]) {\n                totalScore += scores[key];\n            }\n        }\n        return totalScore;\n    }\n    render() {\n        const { scores, doScore } = this.props;\n\n        return (\n            <div className=\"ScoreTable\">\n                <section className=\"ScoreTable-section\">\n                    <h2>Upper</h2>\n                    <table cellSpacing=\"0\">\n                        <tbody>\n                            <RuleRow\n                                name=\"Ones\"\n                                score={scores.ones}\n                                description={ones.description}\n                                doScore={(evt) =>\n                                    doScore(\"ones\", ones.evalRoll)\n                                }\n                            />\n                            <RuleRow\n                                name=\"Twos\"\n                                score={scores.twos}\n                                description={twos.description}\n                                doScore={(evt) =>\n                                    doScore(\"twos\", twos.evalRoll)\n                                }\n                            />\n                            <RuleRow\n                                name=\"Threes\"\n                                score={scores.threes}\n                                description={threes.description}\n                                doScore={(evt) =>\n                                    doScore(\"threes\", threes.evalRoll)\n                                }\n                            />\n                            <RuleRow\n                                name=\"Fours\"\n                                score={scores.fours}\n                                description={fours.description}\n                                doScore={(evt) =>\n                                    doScore(\"fours\", fours.evalRoll)\n                                }\n                            />\n                            <RuleRow\n                                name=\"Fives\"\n                                score={scores.fives}\n                                description={fives.description}\n                                doScore={(evt) =>\n                                    doScore(\"fives\", fives.evalRoll)\n                                }\n                            />\n                            <RuleRow\n                                name=\"Sixes\"\n                                score={scores.sixes}\n                                description={sixes.description}\n                                doScore={(evt) =>\n                                    doScore(\"sixes\", sixes.evalRoll)\n                                }\n                            />\n                        </tbody>\n                    </table>\n                </section>\n                <section className=\"ScoreTable-section ScoreTable-section-lower\">\n                    <h2>Lower</h2>\n                    <table cellSpacing=\"0\">\n                        <tbody>\n                            <RuleRow\n                                name=\"Three of Kind\"\n                                score={scores.threeOfKind}\n                                description={threeOfKind.description}\n                                doScore={(evt) =>\n                                    doScore(\"threeOfKind\", threeOfKind.evalRoll)\n                                }\n                            />\n                            <RuleRow\n                                name=\"Four of Kind\"\n                                score={scores.fourOfKind}\n                                description={fourOfKind.description}\n                                doScore={(evt) =>\n                                    doScore(\"fourOfKind\", fourOfKind.evalRoll)\n                                }\n                            />\n                            <RuleRow\n                                name=\"Full House\"\n                                score={scores.fullHouse}\n                                description={fullHouse.description}\n                                doScore={(evt) =>\n                                    doScore(\"fullHouse\", fullHouse.evalRoll)\n                                }\n                            />\n                            <RuleRow\n                                name=\"Small Straight\"\n                                score={scores.smallStraight}\n                                description={smallStraight.description}\n                                doScore={(evt) =>\n                                    doScore(\n                                        \"smallStraight\",\n                                        smallStraight.evalRoll\n                                    )\n                                }\n                            />\n                            <RuleRow\n                                name=\"Large Straight\"\n                                score={scores.largeStraight}\n                                description={largeStraight.description}\n                                doScore={(evt) =>\n                                    doScore(\n                                        \"largeStraight\",\n                                        largeStraight.evalRoll\n                                    )\n                                }\n                            />\n                            <RuleRow\n                                name=\"Yahtzee\"\n                                score={scores.yahtzee}\n                                description={yahtzee.description}\n                                doScore={(evt) =>\n                                    doScore(\"yahtzee\", yahtzee.evalRoll)\n                                }\n                            />\n                            <RuleRow\n                                name=\"Chance\"\n                                score={scores.chance}\n                                description={chance.description}\n                                doScore={(evt) =>\n                                    doScore(\"chance\", chance.evalRoll)\n                                }\n                            />\n                        </tbody>\n                    </table>\n                </section>\n                <h2>Total Score: {this.getTotalScore()}</h2>\n            </div>\n        );\n    }\n}\n\nexport default ScoreTable;\n","import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // map to set initial dice state for the animation trigger\n            // used instead of the defaultProp in die\n            dice: Array.from({ length: NUM_DICE }).map((d) => 6),\n            locked: Array(NUM_DICE).fill(false),\n            rollsLeft: NUM_ROLLS,\n            rolling: false,\n            scores: {\n                ones: undefined,\n                twos: undefined,\n                threes: undefined,\n                fours: undefined,\n                fives: undefined,\n                sixes: undefined,\n                threeOfKind: undefined,\n                fourOfKind: undefined,\n                fullHouse: undefined,\n                smallStraight: undefined,\n                largeStraight: undefined,\n                yahtzee: undefined,\n                chance: undefined,\n            },\n        };\n        this.animateRoll = this.animateRoll.bind(this);\n        this.roll = this.roll.bind(this);\n        this.doScore = this.doScore.bind(this);\n        this.toggleLocked = this.toggleLocked.bind(this);\n        // this.displayRollInfo = this.displayRollInfo.bind(this);\n    }\n\n    // check if component is mount and roll the initial dice\n    componentDidMount() {\n        this.animateRoll();\n    }\n\n    animateRoll() {\n        this.setState({ rolling: true }, () => {\n            setTimeout(this.roll, 1000);\n        });\n    }\n\n    roll(evt) {\n        // roll dice whose indexes are in reroll\n        this.setState((st) => ({\n            dice: st.dice.map((d, i) =>\n                st.locked[i] ? d : Math.ceil(Math.random() * 6)\n            ),\n            locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n            rollsLeft: st.rollsLeft - 1,\n            rolling: false,\n        }));\n    }\n\n    toggleLocked(idx) {\n        // prevents reroll abuse when the game is over or dice are rolling\n        if (this.state.rollsLeft > 0 && !this.state.rolling) {\n            // toggle whether idx is in locked or not\n            this.setState((st) => ({\n                locked: [\n                    ...st.locked.slice(0, idx),\n                    !st.locked[idx],\n                    ...st.locked.slice(idx + 1),\n                ],\n            }));\n        }\n    }\n\n    doScore(rulename, ruleFn) {\n        // evaluate this ruleFn with the dice and score this rulename\n        this.setState((st) => ({\n            scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n            rollsLeft: NUM_ROLLS,\n            locked: Array(NUM_DICE).fill(false),\n        }));\n        this.animateRoll();\n    }\n\n    displayRollInfo() {\n        const messages = [\n            \"0 Rolls Left\",\n            \"1 Roll Left\",\n            \"2 Rolls Left\",\n            \"Starting Round\",\n        ];\n        return messages[this.state.rollsLeft];\n    }\n\n    render() {\n        // shorthand\n        const { dice, locked, rollsLeft, rolling, scores } = this.state;\n        return (\n            <div className=\"Game\">\n                <header className=\"Game-header\">\n                    <h1 className=\"App-title\">Yahtzee!</h1>\n\n                    <section className=\"Game-dice-section\">\n                        <Dice\n                            dice={dice}\n                            locked={locked}\n                            handleClick={this.toggleLocked}\n                            disabled={rollsLeft === 0}\n                            rolling={rolling}\n                        />\n                        <div className=\"Game-button-wrapper\">\n                            <button\n                                className=\"Game-reroll\"\n                                // disable the button when every value in the array locked is true\n                                disabled={locked.every((x) => x) || rolling}\n                                onClick={this.animateRoll}\n                            >\n                                {this.displayRollInfo()}\n                            </button>\n                        </div>\n                    </section>\n                </header>\n                <ScoreTable doScore={this.doScore} scores={scores} />\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}